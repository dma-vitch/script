#!/bin/bash
# kafka-manager This starts and stops kafka-manager
#
# description: This starts the Linux Auditing System Daemon, \
#              which collects security related events in a dedicated \
#              audit log. If this daemon is turned off, audit events \
#              will be sent to syslog.
#
### BEGIN INIT INFO
# Provides:          kafka-manager
# Required-Start:    $network
# Required-Stop:     $network
# Default-Start:     2 3 4
# Default-Stop:      0 1 6
# Description:       kafka-manager
# Short-Description: Enable kafka-manager service provided by kafka-manager

. /etc/rc.d/init.d/functions

DAEMON=kafka-manager
KAFKA_MANAGER_HOME="/opt/kafka-manager-1.3.0.5"
screen="screen"
session_name="$DAEMON"
ARGS=""
OWNER=user

pidof(){
    echo $(sudo -u $OWNER $screen -ls | grep "${session_name}" | awk '{print$1}' | sed 's/\.'"${session_name}"'//')
}

PID=$(pidof)

killtree() {
    local _pid=$1
    for _child in $(ps -o pid --no-headers --ppid ${_pid}); do
        echo "kill tree ${_child}"
        killtree ${_child}
    done
    if [ -n ${_pid} ]; then
        echo "kill ${_pid}"
        while kill ${_pid}; do
	    sleep 1
        done
    fi
}

start(){
    echo "Starting $DAEMON"
    if [ -z "$PID" ]; then
        cd "$KAFKA_MANAGER_HOME"
        exec sudo -u $OWNER ${screen} -dmS "${session_name}" "${KAFKA_MANAGER_HOME}/run.sh" $ARGS
    else
        echo -e "Already started or busy\nPIDs ${PID}"
        exit 1
    fi
}

status(){
    pid=$(pidof)
    if [ -n "$pid" ]; then
		echo -e "\e[00;32m"$DAEMON" is running with pid: $pid\e[00m"
    else
		echo -e "\e[00;31m"$DAEMON" is not running\e[00m"
		return 3
    fi
}

case "$1" in
    start)
		start
    ;;
    stop)
		echo "Stopping $DAEMON with pid=$PID"
		killtree $PID
		sleep 2
		exec sudo -u $OWNER ${screen} -wipe
    ;;
    restart)
		$0 stop
		sleep 1
		$0 start
    ;;
    status)
		status
    ;;
    *)
		echo "usage: $0 {start|stop|restart|status}"
esac
